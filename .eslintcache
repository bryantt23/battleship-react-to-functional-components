[{"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\index.js":"1","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\reportWebVitals.js":"2","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\App.js":"3","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\GameEngine.js":"4","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Player.js":"5","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Gameboard.js":"6","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Ship.js":"7","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\BoardSection.js":"8","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\index.js":"9","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\App.js":"10","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\GameEngine.js":"11","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\BoardSection.js":"12","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Gameboard.js":"13","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Player.js":"14","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Ship.js":"15"},{"size":197,"mtime":1609663651443,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607103703069,"results":"18","hashOfConfig":"19"},{"size":5934,"mtime":1609661506244,"results":"20","hashOfConfig":"17"},{"size":2359,"mtime":1609661776791,"results":"21","hashOfConfig":"17"},{"size":301,"mtime":1609645233275,"results":"22","hashOfConfig":"17"},{"size":2202,"mtime":1609661673086,"results":"23","hashOfConfig":"17"},{"size":304,"mtime":1609564852248,"results":"24","hashOfConfig":"17"},{"size":1154,"mtime":1609661169569,"results":"25","hashOfConfig":"17"},{"size":197,"mtime":1631504026707,"results":"26","hashOfConfig":"27"},{"size":6027,"mtime":1631768364069,"results":"28","hashOfConfig":"27"},{"size":2270,"mtime":1631504027022,"results":"29","hashOfConfig":"27"},{"size":1004,"mtime":1631505505296,"results":"30","hashOfConfig":"27"},{"size":2114,"mtime":1631504027085,"results":"31","hashOfConfig":"27"},{"size":287,"mtime":1631504027126,"results":"32","hashOfConfig":"27"},{"size":284,"mtime":1631505373685,"results":"33","hashOfConfig":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"12jzriv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"10xfq0z",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"qm64a0",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\index.js",[],["70","71"],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\reportWebVitals.js",[],["72","73"],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\App.js",[],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\GameEngine.js",["74"],"import Player from './Player';\r\nimport Ship from './Ship';\r\nimport Gameboard from './Gameboard';\r\n\r\n//TODO move this into app and make that the gameengine\r\nconst shipSizes = [3, 4, 5];\r\n\r\nclass GameEngine {\r\n  player;\r\n  computer;\r\n  constructor() {}\r\n\r\n  getCoordinates() {\r\n    const size = this.playerGameboard.boardSize;\r\n    const row = Math.floor(Math.random() * size);\r\n    const col = Math.floor(Math.random() * size);\r\n    return [row, col];\r\n  }\r\n\r\n  getOrientation() {\r\n    return Math.round(Math.random()) === 0 ? 'horizontal' : 'vertical';\r\n  }\r\n\r\n  placeShips() {\r\n    const shipSizesLen = shipSizes.length;\r\n    let i = 0;\r\n\r\n    while (i < shipSizesLen) {\r\n      const ship = new Ship(shipSizes[i]);\r\n      let [row, col] = this.getCoordinates();\r\n      let orientation = this.getOrientation();\r\n      let isValidShipPos = this.playerGameboard.isValidShipPosition(\r\n        row,\r\n        col,\r\n        orientation,\r\n        ship\r\n      );\r\n      while (!isValidShipPos) {\r\n        [row, col] = this.getCoordinates();\r\n        orientation = this.getOrientation();\r\n        isValidShipPos = this.playerGameboard.isValidShipPosition(\r\n          row,\r\n          col,\r\n          orientation,\r\n          ship\r\n        );\r\n      }\r\n      this.playerGameboard.placeShip(row, col, orientation, ship);\r\n      i++;\r\n    }\r\n\r\n    i = 0;\r\n    while (i < shipSizesLen) {\r\n      const ship = new Ship(shipSizes[i]);\r\n      let [row, col] = this.getCoordinates();\r\n      let orientation = this.getOrientation();\r\n      let isValidShipPos = this.computerGameboard.isValidShipPosition(\r\n        row,\r\n        col,\r\n        orientation,\r\n        ship\r\n      );\r\n      while (!isValidShipPos) {\r\n        [row, col] = this.getCoordinates();\r\n        orientation = this.getOrientation();\r\n        isValidShipPos = this.computerGameboard.isValidShipPosition(\r\n          row,\r\n          col,\r\n          orientation,\r\n          ship\r\n        );\r\n      }\r\n      this.computerGameboard.placeShip(row, col, orientation, ship);\r\n      i++;\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.player = new Player('player');\r\n    this.computer = new Player('computer');\r\n    this.playerGameboard = new Gameboard(10);\r\n    this.computerGameboard = new Gameboard(10);\r\n    this.placeShips();\r\n\r\n    // console.log(this.playerGameboard.getBoard());\r\n  }\r\n}\r\n\r\nexport default GameEngine;\r\n","C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Player.js",[],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Gameboard.js",[],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\Ship.js",[],"C:\\Users\\bryan\\Downloads\\battleship-react\\src\\components\\BoardSection.js",[],"C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\index.js",[],["75","76"],"C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\App.js",[],"C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\GameEngine.js",["77"],"import Player from './Player';\nimport Ship from './Ship';\nimport Gameboard from './Gameboard';\n\n//TODO move this into app and make that the gameengine\nconst shipSizes = [3, 4, 5];\n\nclass GameEngine {\n  player;\n  computer;\n  constructor() {}\n\n  getCoordinates() {\n    const size = this.playerGameboard.boardSize;\n    const row = Math.floor(Math.random() * size);\n    const col = Math.floor(Math.random() * size);\n    return [row, col];\n  }\n\n  getOrientation() {\n    return Math.round(Math.random()) === 0 ? 'horizontal' : 'vertical';\n  }\n\n  placeShips() {\n    const shipSizesLen = shipSizes.length;\n    let i = 0;\n\n    while (i < shipSizesLen) {\n      const ship = new Ship(shipSizes[i]);\n      let [row, col] = this.getCoordinates();\n      let orientation = this.getOrientation();\n      let isValidShipPos = this.playerGameboard.isValidShipPosition(\n        row,\n        col,\n        orientation,\n        ship\n      );\n      while (!isValidShipPos) {\n        [row, col] = this.getCoordinates();\n        orientation = this.getOrientation();\n        isValidShipPos = this.playerGameboard.isValidShipPosition(\n          row,\n          col,\n          orientation,\n          ship\n        );\n      }\n      this.playerGameboard.placeShip(row, col, orientation, ship);\n      i++;\n    }\n\n    i = 0;\n    while (i < shipSizesLen) {\n      const ship = new Ship(shipSizes[i]);\n      let [row, col] = this.getCoordinates();\n      let orientation = this.getOrientation();\n      let isValidShipPos = this.computerGameboard.isValidShipPosition(\n        row,\n        col,\n        orientation,\n        ship\n      );\n      while (!isValidShipPos) {\n        [row, col] = this.getCoordinates();\n        orientation = this.getOrientation();\n        isValidShipPos = this.computerGameboard.isValidShipPosition(\n          row,\n          col,\n          orientation,\n          ship\n        );\n      }\n      this.computerGameboard.placeShip(row, col, orientation, ship);\n      i++;\n    }\n  }\n\n  startGame() {\n    this.player = new Player('player');\n    this.computer = new Player('computer');\n    this.playerGameboard = new Gameboard(10);\n    this.computerGameboard = new Gameboard(10);\n    this.placeShips();\n\n    // console.log(this.playerGameboard.getBoard());\n  }\n}\n\nexport default GameEngine;\n","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\BoardSection.js",["78"],"import React, { Component } from 'react';\n\nfunction BoardSection({\n  attacked,\n  status,\n  isComputer,\n  updateBoardSectionState\n}) {\n  ///maybe deal with it differently based on player or computer board\n  let message, color;\n  if (status === undefined || (!attacked && isComputer)) {\n    message = 'SEA';\n    color = 'blue';\n  } else if (typeof status === 'object') {\n    message = 'SHIP';\n    color = 'grey';\n  } else {\n    message = status; //should be a string\n    if (status === 'HIT') {\n      color = 'red';\n    } else {\n      color = 'green';\n    }\n  }\n\n  // console.log(message);\n  return (\n    <td\n      disabled={attacked}\n      style={{\n        height: 50,\n        width: 50,\n        display: 'inlineBlock',\n        backgroundColor: color\n      }}\n      onClick={() => {\n        // https:stackoverflow.com/questions/51549115/best-way-to-disabled-div-onclick-in-react\n        !attacked && updateBoardSectionState();\n      }}\n    >\n      {message}\n    </td>\n  );\n}\n\nexport default BoardSection;\n","C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Gameboard.js",[],"C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Player.js",[],"C:\\Users\\bryan\\Documents\\GitHub\\battleship-react-master\\src\\components\\Ship.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":19},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"86","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["95"],["96"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]